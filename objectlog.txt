OBJECTLOG FUNCTIONS
===================
This file provides a mapping from "longname" to shortname (SH)

Format:
  SH <tab> longname <comment ignored>

(This file is read in entirity.
 Used by parse.c to map full function names to two letter
 short names, as used in the objectlog.c switch/case:s.

 It searches for "\tconcat" and returns string between last \n and \t.
 
 Seeems a bit magical? LOL)


META

               (these come first)
: 42             register number constant
: 'foo'          register string constant (only ' ?)

               (once)
:: head ... 0    simple names for headers of output

               (at the end)
::: planname     establish the plan name for the objectlog


CONTROL

t	true, done/exit
f	fail, exit
j	jump relative
g	goto absolute
o	OR
	AND = imlicit!
	
:=	set variable


NUMBERS

+
-
*
/
%
^	a^b / pow / **

|	or bitwise (52 bits)
&	and bitwise (52 bits)
xo	xor bitwise (52 bits)

N=
N!


COMPARE

!=	<>
=	==
<	
>
<=	!>
>=	!<


LOOPS

i 	to
i	iota
i	fromto

i B E		iota: i 1 10= 1..10
d B E S		dota: i 1 10 0.1
l F f...	line: l FILE field ...

F FILE fname	FILE, fopen(fname)


PRINTING

ou	out "columns" w header (first time)
.	print list of values formatted
p	print no formatting
n	newline


STRINGS

S=
S!

CO	concat
AS	ascii
CA	char
CI	charindex
LE	left
RI	right
LO	lower
UP	upper
LN	length
LT	ltrim
RT	rtrim
TR	trim
ST	str

li	like
il	ilike

ts	timestamp



XML EXTRACTION FUNCTIONS

xt	xmlpath
xt	jsonpath        duckdb: foo->'$foo.bar[2].fie'  ->> for VARCHAR
xt      extract
xt      get



MATH FUNCTIONS

sr	sqrt
si	sin
co	cos
ta	tan

ab	abs
ac	acos
as	asin
at	atan
a2	atan2
cr	dbrt
ce	ceil
de	degrees
fl	floor
ep	exp

ie	isfinite
ii	isinf
in	isnan

ln	log
lg	log10
l2	log2

pi	PI
po	pow ** ^

rd	radians
ra	random
ri	srandom/init
sg	sign
