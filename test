clang minisquel.c && {

./a.out 'select 42'
./a.out 'select 3+4*2'
./a.out 'select 3+x, x+3'
./a.out 'select $lineno, i from int(1,5) i'

./a.out 'select i,+3, 1/3 from int(1,5) i'
./a.out 'select a,b,c,d from foo.csv as foo' 

# where clause
./a.out 'select 42, "foo"'
./a.out 'select 42, "foo" where 1=1'
./a.out 'select 42, "foo" where 1=0'
./a.out 'select 42, "foo" where 0.3*3+0.1=1+0.0'
./a.out 'select 42, "foo" where 0.3*3+0.1=1+0.00001'
# and
clang -g addb.c && ./a.out 'select 42 where 1=1 and 1=2'
clang -g addb.c && ./a.out 'select 42 where 1=1 and 2=2'
clang -g addb.c && ./a.out 'select 42 where not(1=1 and 2=1)'
clang -g addb.c && ./a.out 'select 42 where not(1=1 and 1=2)'
# functions
./a.out 'select plus(3,4)'
./a.out 'select plus(3)'
./a.out 'select plus(3,4,5)'
./a.out 'select add()'
./a.out 'select add(1,2,3)'
./a.out 'select add(3,foo,bar,fie,4)'
# strings
./a.out 'select foo as f, upper(f) as F, lower(F)'
./a.out 'select "A" as f, char(ascii(lower(f)))'
# aggregates
./a.out 'select count(i) from int(1,10) i'
# (workaround)
./a.out 'select 1 as foo, sum(foo) from int(1,10) i'
./a.out 'select count(i), sum(i), min(i), avg(i), max(i), stdev(i) from int(1,10) i'

# headers
./a.out 'select 42 as foo,null,1234567890,i+333333333 from int(1,3) as i'


# --------- fail - TODO:
./a.out 'select 42 where (1)=1'
./a.out 'select 42 where ((1)=1)'
./a.out 'select count(42)'
./a.out 'select count(1) from int(1,10) i'

}
