SQL> select 1234567, 42
1234567	42
======= ======= 
1234567	     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 12345678, 42
12345..	42
======= ======= 
 12.35M	     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42
42
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 3+4*2
3+4*2
======= 
     11

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 3+x, x+3
3+x	x+3
======= ======= 
NULL	NULL

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select $lineno, i from int(1,5) i
$lineno	i
======= ======= 
      1	      1
      2	      2
      3	      3
      4	      4
      5	      5

5 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select i,+3, 1/3 from int(1,5) i
i	+3	1/3
======= ======= ======= 
      1	      3	0.3333333
      2	      3	0.3333333
      3	      3	0.3333333
      4	      3	0.3333333
      5	      3	0.3333333

5 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select a,b,c,d from foo.csv as foo
a	b	c	d
======= ======= ======= ======= 
      1	foo	      1	      4
      2	bar	     22	     33
      3	fie	    333	    222
      4	fum	   4444	   1111
      5	foobar	  55555	  11111
      6	foobar*	 666666	 111111

6 rows in 0 ms (read 7 lines)
[9 malloc 10 free (leak -1) 4145 bytes]

SQL> select fish from count.txt(fish) f
fish
======= 
1 a
2 b
3 c
4 d
5 e
5 F
6 g

7 rows in 0 ms (read 8 lines)
[11 malloc 11 free (leak +0) 4149 bytes]

SQL> select 12345, 123456, 1234567, 12345678, 123456789
12345	123456	1234567	12345..	123456789
======= ======= ======= ======= ======= 
  12345	 123456	1234567	 12.35M	 123.5M

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 0.1, 0.02, 0.003, 0.0004, 0.00005, 1.2e5 , 1.2e5, 9.9e99, 9.9e100, 1.2e5, 3
0.1	0.02	0.003	0.0004	0.00005	1.2e5	1.2e5	9.9e99	9.9e100	1.2e5	3
======= ======= ======= ======= ======= ======= ======= ======= ======= ======= ======= 
    0.1	   0.02	  0.003	 0.0004	  5e-05	 120000	 120000	9.9e+99	9.9e+100	 120000	      3

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

== negatives, can be improved
SQL> select -12345, -123456, -1234567, -12345678, -123456789
-12345	-123456	-1234..	-1234..	-123456789
======= ======= ======= ======= ======= 
-1.2e+04	-1.2e+05	-1.2e+06	-1.2e+07	-1.2e+08

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select -0.1, -0.02, -0.003, -0.0004, -0.00005, -1.2e5 , -1.2e5, -9.9e99, -9.9e100, -1.2e5, -3
-0.1	-0.02	-0.003	-0.0004	-0.00..	-1.2e5	-1.2e5	-9.9e99	-9.9e..	-1.2e5	-3
======= ======= ======= ======= ======= ======= ======= ======= ======= ======= ======= 
   -0.1	  -0.02	 -0.003	-0.0004	 -5e-05	-1.2e+05	-1.2e+05	-9.9e+99	-9.9e+100	-1.2e+05	     -3

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42, "foo"
42	"foo"
======= ======= 
     42	foo

1 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 12 bytes]

SQL> select 42, "foo" where 1=1
42	"foo"
======= ======= 
     42	foo

1 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 12 bytes]

SQL> select 42, "foo" where 1=0

0 rows in 0 ms (read 0 lines)
[1 malloc 1 free (leak +0) 4 bytes]

SQL> select 42, "foo" where 0.3*3+0.1=1+0.0
42	"foo"
======= ======= 
     42	foo

1 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 12 bytes]

SQL> select 42, "foo" where 0.3*3+0.1=1+0.00001

0 rows in 0 ms (read 0 lines)
[1 malloc 1 free (leak +0) 4 bytes]

SQL> select i, i*i from int(1,10) i where i*i>25
i	i*i
======= ======= 
      6	     36
      7	     49
      8	     64
      9	     81
     10	    100

5 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42 where 1=1 and 1=2

0 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42 where 1=1 and 2=2
42
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42 where not(1=1 and 2=1)
42
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42 where not(1=1 and 1=2)
42
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select plus(3,4)
plus(3,4)
======= 
      7

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select plus(3)
plus(3)
======= 
% Error: expected plus
  2 parameters, got 1

query:
select plus(3)
              |------>

WANTED(?): plus
	2 parameters, got 1

AT: ''

! EXIT
SQL> select plus(3,4,5)
plus(3,4,5)
======= 
% Error: expected plus
  2 parameters, got 3

query:
select plus(3,4,5)
                  |------>

WANTED(?): plus
	2 parameters, got 3

AT: ''

! EXIT
SQL> select add()
add()
======= 
      0

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select add(1,2,3)
add(1,2,3)
======= 
      6

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select add(3,foo,bar,fie,4)
add(3,foo,bar,fie,4)
======= 
      7

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select foo as f, upper(f) as F, lower(F)
f	F	lower(F)
======= ======= ======= 
NULL	NULL	NULL

1 rows in 0 ms (read 0 lines)
[2 malloc 0 free (leak +2) 4 bytes]

SQL> select "A" as f, char(ascii(lower(f)))
f	char(ascii(lower(f)))
======= ======= 
A	a

1 rows in 0 ms (read 0 lines)
[5 malloc 5 free (leak +0) 10 bytes]

SQL> select concat("foo", "bar", "fie") as ccc
ccc
======= 
foobarfie

1 rows in 0 ms (read 0 lines)
[11 malloc 10 free (leak +1) 50 bytes]

SQL> select concat(null, "foo", 42, "bar")
concat(null, "foo", 42, "bar")
======= 
foo42bar

1 rows in 0 ms (read 0 lines)
[7 malloc 7 free (leak +0) 33 bytes]

SQL> select concat(null, "foo", 12345678901234567890, "bar")
concat(null, "foo", 12345678901234567890, "bar")
======= 
foo12345678901234567168bar

1 rows in 0 ms (read 0 lines)
[7 malloc 7 free (leak +0) 51 bytes]

SQL> select left(concat("foo", "bar", "fie"),5) as c5
c5
======= 
fooba

1 rows in 0 ms (read 0 lines)
[12 malloc 11 free (leak +1) 55 bytes]

SQL> select right(concat("foo", "bar", "fie"),5) as c5
c5
======= 
arfie

1 rows in 0 ms (read 0 lines)
[12 malloc 11 free (leak +1) 55 bytes]

SQL> select left(right(concat("foo", "bar", "fie"), 6),4)
left(right(concat("foo", "bar", "fie"), 6),4)
======= 
barf

1 rows in 0 ms (read 0 lines)
[12 malloc 12 free (leak +0) 58 bytes]

SQL> select count(i) from int(1,10) i
count(i)
======= 
      1
      2
      3
      4
      5
      6
      7
      8
      9
     10

10 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select type(NULL) as tnull, type(foo) as tstr, type(3.3) as tnumber, type(3) as tint
tnull	tstr	tnumber	tint
======= ======= ======= ======= 
none	none	num	int

1 rows in 0 ms (read 0 lines)
[4 malloc 0 free (leak +4) 24 bytes]

SQL> select 1 as foo, sum(foo) from int(1,10) i
foo	sum(foo)
======= ======= 
      1	      1
      1	      2
      1	      3
      1	      4
      1	      5
      1	      6
      1	      7
      1	      8
      1	      9
      1	     10

10 rows in 0 ms (read 0 lines)
[1 malloc 0 free (leak +1) 4 bytes]

SQL> select count(i), sum(i), min(i), avg(i), max(i), stdev(i) from int(1,10) i
count..	sum(i)	min(i)	avg(i)	max(i)	stdev(i)
======= ======= ======= ======= ======= ======= 
      1	      1	      1	      1	      1	    nan
      2	      3	      1	    1.5	      2	0.7071068
      3	      6	      1	      2	      3	      1
      4	     10	      1	    2.5	      4	1.290994
      5	     15	      1	      3	      5	1.581139
      6	     21	      1	    3.5	      6	1.870829
      7	     28	      1	      4	      7	2.160247
      8	     36	      1	    4.5	      8	2.44949
      9	     45	      1	      5	      9	2.738613
     10	     55	      1	    5.5	     10	3.02765

10 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42 as foo,null,1234567890,i+333333333 from int(1,3) as i
foo	null	12345..	i+333333333
======= ======= ======= ======= 
     42	NULL	 1.235G	NULL
     42	NULL	 1.235G	NULL
     42	NULL	 1.235G	NULL

3 rows in 0 ms (read 0 lines)
[1 malloc 0 free (leak +1) 4 bytes]

SQL> select ta.a, tb.a from foo.csv ta, foo.csv tb where ta.a=tb.a
ta.a	tb.a
======= ======= 
      1	      1
      2	      2
      3	      3
      4	      4
      5	      5
      6	      6

6 rows in 1 ms (read 49 lines)
[63 malloc 70 free (leak -7) 29015 bytes]

before
SQL> select i,j,i*j from int(1,20) i, int(1,10) j where i=j
i	j	i*j
======= ======= ======= 
      1	      1	      1
      2	      2	      4
      3	      3	      9
      4	      4	     16
      5	      5	     25
      6	      6	     36
      7	      7	     49
      8	      8	     64
      9	      9	     81
     10	     10	    100

10 rows in 1 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select t1.a, t2.a, b from foo.csv t1, foo.csv t2 where t1.a=t2.a
t1.a	t2.a	b
======= ======= ======= 
      1	      1	foo
      2	      2	bar
      3	      3	fie
      4	      4	fum
      5	      5	foobar
      6	      6	foobarfie

6 rows in 1 ms (read 49 lines)
[63 malloc 70 free (leak -7) 29015 bytes]

SQL> select t1.a, t2.a, b from foo.csv t1 join foo.csv t2 on a where t1.a=t2.a
t1.a	t2.a	b
======= ======= ======= 
      1	      1	foo
      2	      2	bar
      3	      3	fie
      4	      4	fum
      5	      5	foobar
      6	      6	foobarfie

6 rows in 0 ms (read 14 lines)
[29 malloc 30 free (leak -1) 8381 bytes]

SQL> select name from "ls Test/*.csv|"(name) file
name
======= 
Test/err.csv
Test/fil.csv
Test/foo.csv
Test/happy.csv
Test/manynls.csv
Test/nl.csv
Test/null.csv

7 rows in 1 ms (read 8 lines)
[12 malloc 12 free (leak +0) 4243 bytes]

SQL> select i from one2ten ten
i
======= 
      1
      2
      3
      4
      5
      6
      7
      8
      9
     10

10 rows in 1 ms (read 11 lines)
[6 malloc 7 free (leak -1) 4177 bytes]

SQL> select i from one2ten.sql ten
i
======= 
      1
      2
      3
      4
      5
      6
      7
      8
      9
     10

10 rows in 1 ms (read 11 lines)
[4 malloc 5 free (leak -1) 4161 bytes]

Variable 'debug' set to 1
SQL> create index ix on foo.csv(a)
 [trying foo.csv]
 [trying foo.csv]
 [trying Test/foo.csv]
 [found foo.csv]
decidedelim: ','
  DELIM: 4 ,4 ;0 \t0 _0
 {linkval foo.csv.a}
 {linkval foo.csv.b}
 {linkval foo.csv.c}
 {linkval foo.csv.d}
 {linkval foo.csv.e}


========== index.foo.csv.a
IX>                  1  16  @   10
IX>                  2  16  @   27
IX>                  3  16  @   45
IX>                  4  16  @   64
IX>                  5  16  @   84
IX>                  6  16  @  109
------ 6 entries 6 distinct 0 groups
nstrdup=0 bstrdup=0
Bytes: 96



SQL> set @a=42

SQL> select @a
@a
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> set #a=42

SQL> select #a
#a
======= 
     42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> create view foo as "ls -1|"

SQL> select name, type, params, select, impl from $view bar
name	type	params	select	impl
======= ======= ======= ======= ======= 
foo	view	NULL	      0	"ls -1|"

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> create view foo as "ls -1|"

SQL> select name, type, params, select, impl from $view bar where bar.name="foo"
name	type	params	select	impl
======= ======= ======= ======= ======= 
foo	view	NULL	      0	"ls -1|"

1 rows in 0 ms (read 0 lines)
[1 malloc 1 free (leak +0) 4 bytes]

SQL> CREATE VIEW bar AS SELECT 42

SQL> select name, type, params, select, impl from $view bar
name	type	params	select	impl
======= ======= ======= ======= ======= 
bar	view	NULL	      1	SELECT 42

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select "matches" where "foo" like "%o"
"matches"
======= 
matches

1 rows in 0 ms (read 0 lines)
[5 malloc 5 free (leak +0) 31 bytes]

SQL> select "matches" where "foo" like "o%"

0 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 15 bytes]

SQL> select "matches" where "foo" like "%x"

0 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 15 bytes]

SQL> select "matches" where "foo" like "%oo"
"matches"
======= 
matches

1 rows in 0 ms (read 0 lines)
[5 malloc 5 free (leak +0) 32 bytes]

SQL> select "matches" where "foofoba" like "f%f%a"
"matches"
======= 
matches

1 rows in 0 ms (read 0 lines)
[5 malloc 5 free (leak +0) 38 bytes]

SQL> select [foo.*] from foo foo
foo.a	foo.b	foo.c	foo.d	foo.e
======= ======= ======= ======= ======= 
      1	foo	      1	      4	   4444
      2	bar	     22	     33	    333
      3	fie	    333	    222	     22
      4	fum	   4444	   1111	      1
      5	foobar	  55555	  11111	      0
      6	foobar*	 666666	 111111	     -1

6 rows in 0 ms (read 7 lines)
[10 malloc 11 free (leak -1) 4145 bytes]

========== BUGS ===========
SQL> select 42 where (1)=1
% Error: expected comparator

query:
select 42 where (1)=1
                  |------>

WANTED(?): comparator

AT: ')=1'

! EXIT
SQL> select 42 where ((1)=1)
% Error: expected comparator

query:
select 42 where ((1)=1)
                   |------>

WANTED(?): comparator

AT: ')=1)'

! EXIT
SQL> select count(42)
count(42)
======= 
% Error: expected count
  currently only works on named variables

query:
select count(42)
                |------>

WANTED(?): count
	currently only works on named variables

AT: ''

! EXIT
SQL> select count(1) from int(1,10) i
count(1)
======= 
% Error: expected count
  currently only works on named variables

query:
select count(1) from int(1,10) i
               |------>

WANTED(?): count
	currently only works on named variables

AT: ' from int(1,10) i'

! EXIT
SQL> select 123 456, 42
123
======= 
    123

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select 42, 1e-9, 99
42	1e-9	99
======= ======= ======= 
     42	     -9	     99

1 rows in 0 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select count(i), count(j), count() from int(1,10) i, int(1,10) j
count..	count..	count()
======= ======= ======= 
      1	      1	      1
      1	      2	      2
      1	      3	      3
      1	      4	      4
      1	      5	      5
      1	      6	      6
      1	      7	      7
      1	      8	      8
      1	      9	      9
      1	     10	     10
      2	      1	     11
      2	      2	     12
      2	      3	     13
      2	      4	     14
      2	      5	     15
      2	      6	     16
      2	      7	     17
      2	      8	     18
      2	      9	     19
      2	     10	     20
      3	      1	     21
      3	      2	     22
      3	      3	     23
      3	      4	     24
      3	      5	     25
      3	      6	     26
      3	      7	     27
      3	      8	     28
      3	      9	     29
      3	     10	     30
      4	      1	     31
      4	      2	     32
      4	      3	     33
      4	      4	     34
      4	      5	     35
      4	      6	     36
      4	      7	     37
      4	      8	     38
      4	      9	     39
      4	     10	     40
      5	      1	     41
      5	      2	     42
      5	      3	     43
      5	      4	     44
      5	      5	     45
      5	      6	     46
      5	      7	     47
      5	      8	     48
      5	      9	     49
      5	     10	     50
      6	      1	     51
      6	      2	     52
      6	      3	     53
      6	      4	     54
      6	      5	     55
      6	      6	     56
      6	      7	     57
      6	      8	     58
      6	      9	     59
      6	     10	     60
      7	      1	     61
      7	      2	     62
      7	      3	     63
      7	      4	     64
      7	      5	     65
      7	      6	     66
      7	      7	     67
      7	      8	     68
      7	      9	     69
      7	     10	     70
      8	      1	     71
      8	      2	     72
      8	      3	     73
      8	      4	     74
      8	      5	     75
      8	      6	     76
      8	      7	     77
      8	      8	     78
      8	      9	     79
      8	     10	     80
      9	      1	     81
      9	      2	     82
      9	      3	     83
      9	      4	     84
      9	      5	     85
      9	      6	     86
      9	      7	     87
      9	      8	     88
      9	      9	     89
      9	     10	     90
     10	      1	     91
     10	      2	     92
     10	      3	     93
     10	      4	     94
     10	      5	     95
     10	      6	     96
     10	      7	     97
     10	      8	     98
     10	      9	     99
     10	     10	    100

100 rows in 2 ms (read 0 lines)
[0 malloc 0 free (leak +0) 0 bytes]

SQL> select t1.a, t2.a, b from foo.csv t1 join foo.csv t2 on a where
t1.a	t2.a	b
======= ======= ======= 
      1	      1	foo
      1	      2	bar
      1	      3	fie
      1	      4	fum
      1	      5	foobar
      1	      6	foobarfie
      2	      2	bar
      3	      3	fie
      4	      4	fum
      5	      5	foobar
      6	      6	foobarfie

11 rows in 1 ms (read 14 lines)
[29 malloc 30 free (leak -1) 8381 bytes]

SQL> select t1.a, t2.a, t2.b from foo.csv t1 join foo.csv t2 on a where t1.a=t2.a
t1.a	t2.a	t2.b
======= ======= ======= 
      1	      1	foo
      2	      2	NULL
      3	      3	NULL
      4	      4	NULL
      5	      5	NULL
      6	      6	NULL

6 rows in 1 ms (read 14 lines)
[29 malloc 30 free (leak -1) 8381 bytes]

SQL> select "foo"
"foo"
======= 
foo

1 rows in 0 ms (read 0 lines)
[3 malloc 3 free (leak +0) 12 bytes]

affec
affec
enjoy
affec
bondi
exerc

100535 rows in 1286 ms (read 100536 lines)
[617339 malloc 617340 free (leak -1) 21382603 bytes]

SQL> select a,b,c,d,e from null n
a	b	c	d	e
======= ======= ======= ======= ======= 
NULL	NULL	N	NULL	      0

1 rows in 0 ms (read 2 lines)
[5 malloc 6 free (leak -1) 4117 bytes]

^^^^^^^^^^ BUGS ^^^^^^^^^^^
