sql	:= select | set | create (view | function)

select	:= SELECT cexprs [from] [where] [group] [order] [having]

  start= ps;
  if (got("SELECT")) {
    OL("out ", EXPECT(cexprs));
  }
  return start;	

cexprs	:= cexpr [, ...]

  l= listof(cexpr, ',');

cexpr	:= * | id | nexpr

  d= OR(IF('*', matchnames), id, nexpr);
	
exprs	:= nexpr [, ...]
nexpr	:= expr [AS name]
expr	:= prim [(* | / | %) ...]
prim	:= simple [(+ | -)] ...]
simple	:= num | str | call | var
call	:= 

from	:= FROM table tname [, ... ..]

where	:= WHERE or
or	:= [NOT] '(' or ')' | and [OR ...]
	
  not= got("NOT");
  l= listof(and, "OR");

and	:= cmp [AND ...]

  l= listof(or, "AND");

cmp	:= [NOT] expr op expr

  not= got("NOT");
  a=   EXPECT(expr);
       EXPECT(op);
  b=   EXPECT(expr);
  OL(op, a, b);

op	:= LIKE | ILIKE | = | == | != | <> | < | > | <= | >= | !< | !>

call	:= id '(' [expr [, ...]] ')'

  f= GOT(fname)
     EXPECT('(');
  l= listof(expr, ',');
     EXPECT(')');

group	:= GROUP BY col
order	:= ORDER BY col [ASC[ENDING] | DESC[ENDING] ]
having	:= HAVING or

var	:= id | tname '.' id
tname	:= name
name	:= str | id
id	:= '[' idchars ']' | ?
fname   := idchars
str	:= ' chars1 ' || " chars2 "

idchars	:= ( [^\[\]] ) ...
chars1  := ( [^'] | '') ...
chars2  := ( [^"] | "") ...

num	:= [+ | -] [digits] ['.' [digits]] [e [+ | -] digits]

digits	:= (0-9) ...
